<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/style.css">
    <title>Product Catalog</title>
    <style>
        .image-option {
            border: 2px solid transparent;
            cursor: pointer;
        }

        .image-option.selected {
            border: 2px solid blue;
        }
    </style>
</head>

<body>
    <h1>Add New Product</h1>

    <form action="/new" method="POST">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required>

        <label for="price">Price:</label>
        <input type="text" id="price" name="price" required>

        <label for="description">Description:</label>
        <textarea id="description" name="description" required></textarea>

        <h2>Select Product Image:</h2>
        <div id="imageList" style="display: flex; flex-wrap: wrap; gap: 10px;">
            <p>Loading images...</p>
        </div>

        <input type="hidden" name="imageID" id="imageID">

        <button type="submit">Add Product</button>
    </form>

    <script>
        const API_KEY = "<%= API_KEY %>";
        const imageList = document.getElementById("imageList");
        const hiddenImageInput = document.getElementById("imageID");
    
        async function loadImages() {
            try {
                const res = await fetch(`/images?apiKey=${API_KEY}`);
                if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);
                const images = await res.json();
    
                imageList.innerHTML = '';
    
                images.forEach(image => {
                    const imgEl = document.createElement("img");
                    imgEl.src = image.imageURL;
                    imgEl.width = 100;
                    imgEl.height = 100;
                    imgEl.classList.add("image-option");
    
                    imgEl.addEventListener("click", () => {
                        document.querySelectorAll(".image-option").forEach(i => i.classList.remove("selected"));
    
                        imgEl.classList.add("selected");
                        hiddenImageInput.value = image.imageID;
                    });
    
                    imageList.appendChild(imgEl);
                });
            } catch (err) {
                console.error("Failed to load images:", err);
                imageList.innerHTML = "<p>Could not load images.</p>";
            }
        }
    
        loadImages();
    </script>    
</body>

</html>
